{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "WindowsServerName": {
      "type": "string",
      "minLength": 1
    },
    "WindowsServerVmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "allowedValues": [
        "Standard_B1s",
        "Standard_B2s",
        "Standard_D2s_v3",
        "Standard_E2s_v3"
      ]
    },
    "WindowsServerAdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "WindowsServerAdminPassword": {
      "type": "securestring"
    },
    "WindowsServerWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ]
    },
    "servers-vnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16"
    },
    "servers-vnetSubnet1Name": {
      "type": "string",
      "defaultValue": "Subnet-1"
    },
    "servers-vnetSubnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24"
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/popowicki/SmallServer/master/SmallServer/DSC/IISConfig.zip"
    }
  },
  "variables": {
    "WindowsServerImagePublisher": "MicrosoftWindowsServer",
    "WindowsServerImageOffer": "WindowsServer",
    "WindowsServerOSDiskName": "WindowsServerOSDisk",
    "WindowsServerVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'servers-vnet')]",
    "WindowsServerSubnetRef": "[concat(variables('WindowsServerVnetID'), '/subnets/', parameters('servers-vnetSubnet1Name'))]",
    "WindowsServerStorageAccountContainerName": "vhds",
    "WindowsServerNicName": "[concat(parameters('WindowsServerName'), 'NetworkInterface')]"},
  "resources": [
    {
      "name": "servers-vnet",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses','LabPublicIP-pip')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups','AllowRD-nsg')]"
      ],
      "tags": {
        "displayName": "servers-vnet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('servers-vnetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('servers-vnetSubnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('servers-vnetSubnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'AllowRD-nsg')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('WindowsServerNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'servers-vnet')]",
        "[resourceId('Microsoft.Network/publicIPAddresses','LabPublicIP-pip')]"
      ],
      "tags": {
        "displayName": "WindowsServerNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'LabPublicIP-pip')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('WindowsServerSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('WindowsServerName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('WindowsServerNicName'))]"
      ],
      "tags": {
        "displayName": "WindowsServer"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('WindowsServerVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('WindowsServerName')]",
          "adminUsername": "[parameters('WindowsServerAdminUsername')]",
          "adminPassword": "[parameters('WindowsServerAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('WindowsServerImagePublisher')]",
            "offer": "[variables('WindowsServerImageOffer')]",
            "sku": "[parameters('WindowsServerWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('WindowsServerNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('WindowsServerName'))]"
          ],
          "tags": {
            "displayName": "IISConfig"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[parameters('_artifactsLocation')]",
                "script": "IISConfig.ps1",
                "function": "Main"
              },
              "configurationArguments": {
                "nodeName": "[parameters('WindowsServerName')]"
              }
            },
            "protectedSettings": { }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "AllowRD-nsg",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "AllowRD-nsg"
      },
      "apiVersion": "2017-06-01",
      "scale": null,
      "properties": {
        "securityRules": [
          {
            "name": "AllowRemoteDesktop",
            "properties": {
              "provisioningState": "Succeeded",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowHttp",
            "properties": {
              "provisioningState": "Succeeded",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInBound",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Allow inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowAzureLoadBalancerInBound",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllInBound",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Deny all inbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Allow outbound traffic from all VMs to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Deny all outbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "LabPublicIP-pip",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-06-01",
      "scale": null,
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    }
  ],
  "outputs": {}
}
